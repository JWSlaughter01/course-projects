#include <iostream>
using namespace std;

int main()
{
    int mrow, mcol;
   cout <<  "Enter the number of rows and columns: ";
   cin >> mrow >> mcol;
   // check if number of columns and rows are same ) // input validation
    while (mrow != mcol){
        cout << "The number of rows and columns must be same." << endl;
        /*
        Enter your code
        */
        //if not functional, prompt a proper set until one is given
        cout << "Enter the number of rows and columns: ";
        cin >> mrow >> mcol;
    }
    cout << "Enter the values for the matrix: \n";
     int A[mrow][mcol];
     /*
        Enter your code
        */
        //double loops to input one position at a time within the matrix
      for (int i = 0; i < mrow; i++) {
         for (int j = 0; j < mcol; j++) {
            cin >> A[i][j];
         }
      }
         
    // code to find if matrix is symmetrical
     /*
        Enter your code 
        your code will appropriately output one of the statements
       
            cout << "The matrix is not symmetrical." << endl;
           
            cout << "The matrix is symmetrical." << endl;
            
            */
            /*For the next section of code, I need a method of validation, checking for symmetry and marking if
            incongruence is found. For the ladder, I have two options. The first is a boolean var being set to
            false if incongruence is found, the other is having an int var set to either 0 or -1 and having the var
            changed if asymmetry is found.
            
            For symmetry in linear algebra, the diagonal from 0,0 doesn't matter, as it isn't changed in a transposition
            of the matrix. Focus is on making sure that the transposition locations match.
            */
      bool isSymm = true;
      for (int i = 0; i < mrow; i++) {
         for (int j = 0; j < mcol; j++) {
            if (A[i][j] != A[j][i]) {
               isSymm = false;
               //exit col loop
               break;
            }
         }
         if (!isSymm) {
            //exit row loop
            break;
         }
      }
      
      if (isSymm) {
         cout << "The matrix is symmetrical." << endl;
      } else {
         cout << "The matrix is not symmetrical." << endl;
      }
      

}
